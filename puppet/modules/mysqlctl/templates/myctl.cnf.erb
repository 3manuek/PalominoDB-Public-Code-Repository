; myctl.cnf.erb
; Copyright (C) 2013 PalominoDB, Inc.
; 
; You may contact the maintainers at eng@palominodb.com.
; 
; This program is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 2 of the License, or
; (at your option) any later version.
; 
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License along
; with this program; if not, write to the Free Software Foundation, Inc.,
; 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

[client]
; User/pw used for starting/stoping slave and flushing logs
user = root
password = secret

[mysqlctl]
; How long mysqlctl will wait before assuming the stop has failed.
; This doesn't mean the stop HAS failed, just that mysqlctl gave
; up waiting.
stop_timeout = 1800

; Same as above, but for starting mysql
start_timeout = 1800

; How many log flushes to do.
flushes = 3
; How long to sleep between log flushes
flush_sleep = 5

; What type of shutdown InnoDB should be told to do
; We default to whatever mysql is set to.
; 0 = full sync (may take HOURS) (this is the safest value),
; 1 = (mysql default) do nothing,
; 2 = simple log and trx flush (will force an InnoDB recovery on startup)
innodb_shutdown = 0

;; Sample hook script to curl a nagios install with a downtime.cgi
;; "nagios_url" is a custom variable used by nagios_downtime.sh
;; to point to the root of the nagios install
;; "nagios_downtime_length" is the length in minutes that the downtime
;; should last.
nagios_url = http://<%= site_nagios_url %>/
nagios_downtime_length = 600
hook_script = /usr/share/mysqlctl/nagios_downtime.sh

;; These are only for unusual configurations.
;; They set the path to the required utilities,
;; should they not be in $PATH
;; To use, uncomment and set to the correct path.
; mysqld_safebin = /opt/mysql-custom/bin/mysqld_safe
; mysqladminbin = /opt/mysql-custom/bin/mysqladmin

;; Another option to setting the full path is to set the basedir
;; path to the ROOT of a mysql install. Where, basedir/bin
;; contains mysqladmin, and basedir/sbin contains mysqld_safe
<% if File.exist? "/usr/local/mysql" %>
basedir = /usr/local/mysql
<% end %>
