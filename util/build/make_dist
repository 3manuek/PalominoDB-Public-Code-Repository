#!/usr/bin/env perl
use strict;
use warnings FATAL => 'all';
use English qw(-no_match_vars);
use Getopt::Long qw(:config no_ignore_case);
require 'insert_module';

my $input = "";
my @module_paths;
my @modules;

GetOptions(
  'lib|L=s@' => \@module_paths
);

# Legacy behavior
if(!@module_paths) {
  push @module_paths, shift @ARGV;
}

my $infile = shift @ARGV;
my $outfile = shift @ARGV;

{
  open my $file, "<$infile";
  $/ = undef;
  $input = <$file>;
  close $file;
}

my $script_ver = qx@../../util/gitver.sh $infile@;

$input =~ s/\bSCRIPT_GIT_VERSION\b/$script_ver/g;
$input =~ s/\bGIT_SCRIPT_VERSION\b/$script_ver/g;

(@modules) = $input =~ /^# ([A-Z0-9a-z_]+(?:::[A-Z0-9a-z_]+)*) package (?:[a-f0-9]{40}|GIT_VERSION)/mg;

foreach my $m (@modules) {
  SEARCH_PATH: foreach my $mpath (@module_paths) {
    eval {
      $input = SrcUtils::insert_module($mpath, $m, $input);
    };
    unless($@) {
      last;
    }
  }
}

open my $output, ">$outfile";
print $output $input;
close $output;
